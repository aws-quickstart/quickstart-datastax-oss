AWSTemplateFormatVersion: 2010-09-09
Description: Create clusternode in ASG
Parameters:
  ClusterName:
    Description: The name of the DDAC Cluster.
    Type: String
    Default: DDAC-Cluster
  DatacenterName:
    Description: The name of the DDAC Datacenter.
    Type: String
    Default: DDAC-dc0
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  EmailAddress:
    Description: Email Address for notification
    Type: String
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must be a valid email id.
  KeyPairName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Name of an existing EC2 KeyPair.
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: implementing/
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  Subnet1ID:
    Description: Subnet Id 1
    Type: 'AWS::EC2::Subnet::Id'
  Subnet2ID:
    Description: Subnet Id 2
    Type: 'AWS::EC2::Subnet::Id'
  Subnet3ID:
    Description: Subnet Id 3
    Type: 'AWS::EC2::Subnet::Id'
  ClusterAutoScaleMinSize:
    Description: "The minimum number of DDAC nodes to create."
    Type: String
    Default: 3
    AllowedValues:
      - 3
      - 4
      - 5
      - 6
  ClusterAutoScaleMaxSize:
    Description: "The max number of DDAC nodes to auto scale."
    Type: String
    Default: 3
    AllowedValues:
      - 3
      - 4
      - 5
      - 6
  DDACSecGroup:
    Description: "DDAC Security Group ID."
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
  SeedNodeIps:
    Description: "csv IPs of the seedsnodes."
    Type: String
  VolumeSize:
    Type: Number
    Description: "EBS volume size of the DDAC Cluster Nodes in GB"
    Default: 1024
Mappings:
  ClusterSizeMap:
    "3":
      Value: "1"
    "4":
      Value: "2"
    "5":
      Value: "3"
    "6":
      Value: "4"
    "7":
      Value: "5"
    "8":
      Value: "6"
    "9":
      Value: "7"
    "10":
      Value: "8"
    "11":
      Value: "9"
    "12":
      Value: "10"
    "13":
      Value: "11"
    "14":
      Value: "12"
    "15":
      Value: "13"
    "16":
      Value: "14"
    "17":
      Value: "15"
    "18":
      Value: "16"
    "19":
      Value: "17"
    "20":
      Value: "18"
  AWSAMIRegionMap:
    AMI:
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180405
    ap-northeast-1:
      US1604HVM: ami-60a4b21c
    ap-northeast-2:
      US1604HVM: ami-633d920d
    ap-south-1:
      US1604HVM: ami-dba580b4
    ap-southeast-1:
      US1604HVM: ami-82c9ecfe
    ap-southeast-2:
      US1604HVM: ami-2b12dc49
    ca-central-1:
      US1604HVM: ami-9d7afcf9
    eu-central-1:
      US1604HVM: ami-cd491726
    eu-west-1:
      US1604HVM: ami-74e6b80d
    eu-west-2:
      US1604HVM: ami-506e8f37
    sa-east-1:
      US1604HVM: ami-5782d43b
    us-east-1:
      US1604HVM: ami-6dfe5010
    us-east-2:
      US1604HVM: ami-e82a1a8d
    us-west-1:
      US1604HVM: ami-493f2f29
    us-west-2:
      US1604HVM: ami-ca89eeb2
Conditions:
  GovCloudCondition: !Equals
    - !Ref 'AWS::Region'
    - us-gov-west-1
Resources:
  InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - Ref: 'InstanceRole'
  AuthenticatedS3Policy:
    Type: AWS::IAM::Policy
    Properties:
        PolicyName: AuthenticatedS3GetObjects
        Roles:
        - !Ref InstanceRole
        PolicyDocument:
           Statement:
             - Sid: BucketAccess
               Effect: Allow
               Action:
                 - 's3:GetObject'
               Resource: !Sub arn:aws:s3:::${QSS3BucketName}/*
  NotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref EmailAddress
          Protocol: email
  ClusterNodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - !Ref Subnet3ID
        - !Ref Subnet1ID
        - !Ref Subnet2ID
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      MinSize: !FindInMap
        - ClusterSizeMap
        - !Ref ClusterAutoScaleMinSize
        - Value
      MaxSize: !FindInMap
        - ClusterSizeMap
        - !Ref ClusterAutoScaleMaxSize
        - Value
      NotificationConfigurations:
      -  TopicARN: !Ref NotificationTopic
         NotificationTypes:
          - 'autoscaling:EC2_INSTANCE_LAUNCH'
          - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
          - 'autoscaling:EC2_INSTANCE_TERMINATE'
          - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      Tags:
      - Key: Name
        PropagateAtLaunch: "true"
        Value: DDAC_ASG_node
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: '1'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT10M
        WaitOnResourceSignals: true
  ClusterNodeLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Authentication':
       S3AccessCreds:
         type: S3
         roleName: !Ref InstanceRole
         buckets: !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        configSets:
          cs_install:
            - install_and_enable_cfn_hup
            - install_ddac
            - post_install
        install_and_enable_cfn_hup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init
                  - 'action=/usr/local/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource ClusterNodeLaunchConfig '
                  - '         --configsets cs_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
            /lib/systemd/system/cfn-hup.service:
              content: !Join
                - ''
                - - |
                    [Unit]
                  - |+
                    Description=cfn-hup daemon

                  - |
                    [Service]
                  - |
                    Type=simple
                  - |
                    ExecStart=/usr/local/bin/cfn-hup
                  - |+
                    Restart=always
                  - |
                    [Install]
                  - WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
        install_ddac:
          sources:
            /home/ubuntu: !Sub
                - >-
                  https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/deploy.tar
                - QSS3BucketName: !Ref QSS3BucketName
                  S3Region: !If [ GovCloudCondition, s3-us-gov-west-1, s3 ]
                  QSS3KeyPrefix: !Ref QSS3KeyPrefix
          commands:
            01_install_ddac:
              command: "ln -s /home/ubuntu /home/ddac"
            02_install_ddac:
              command: "cd /home/ddac"
            03_install_ddac:
              command: "apt-get install -y openjdk-8-jdk"
            04_install_ddac:
              command: "pip install awscli"
            05_install_ddac:
              command: "apt-get install -y jq"
            06_install_ddac:
              command: !Sub "/home/ddac/deploy-dse.sh ${ClusterName} ${DatacenterName} ${SeedNodeIps}"
        post_install:
          commands:
            01_post_install_ddac:
              command: "touch /tmp/01_post_install_ddac"
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - US1604HVM
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref VolumeSize
            VolumeType: gp2
      SecurityGroups: !Ref DDACSecGroup
      UserData:
        Fn::Base64: !Sub
        - |
          #!/bin/bash -xe
          #CFN Signaling fuctions (begin)
          function cfn_fail
          {
            cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource ClusterNodeGroup
            exit 1
          }
          function cfn_success
          {
            cfn-signal -e 0 --stack ${AWS::StackName} --region ${AWS::Region} --resource ClusterNodeGroup
            exit 0
          }
          #Load Linux utils
          until git clone https://github.com/aws-quickstart/quickstart-linux-utilities.git ; do echo "Retrying"; done
          cd /quickstart-linux-utilities && source quickstart-cfn-tools.source
          # Constants
          S3URI=https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}
          # Prep operating systems
          qs_update-os || qs_err
          qs_bootstrap_pip || qs_err
          qs_aws-cfn-bootstrap || qs_err
          #Run cfn-init configsets
          cfn-init -v --stack ${AWS::StackName} --resource ClusterNodeLaunchConfig --configsets cs_install --region ${AWS::Region} || qs_err
          # Signal cfn-init (final check)
          [ $(qs_status) == 0 ] && cfn_success || cfn_fail

        - S3Region: !If [ GovCloudCondition, s3-us-gov-west-1, s3 ]
  ClusterNodeScaleUpPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: '60'
      ScalingAdjustment: 1
  ClusterNodeCPUAlarmHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-up if CPU > 90% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 90
      AlarmActions:
        - !Ref ClusterNodeScaleUpPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold
